// dependencies
const Token = require('token');
const handler = require('handlers/handler');
const User = require('user');

const tokenHandler = {};

tokenHandler.handler = handler.create(tokenHandler, ['post', 'get', 'put', 'delete']);

// creation of a token, we need the user to login;
// we need email and password
tokenHandler.post = data => {
	const {email, password} = data.body;
	return new Promise(function(resolve, reject) {

		User.login(email, password)
		.then(token => resolve({token:token.id()}))
		.catch(reject);
	});

};

// get the data from a token
// the token given in the header
tokenHandler.get = async data => {
	// first verify that the user is connected
	let token;
	try {
		token = await handler.requireToken(data);
	}
	catch (err) {
		return Promise.reject(err);
	}

	// then send the data back to the user
	return Promise.resolve(token.get());
};

tokenHandler.put = handler.requireToken;

tokenHandler.delete = async data => {
	// first verify that the user is connected
	let token;
	try {
		token = await handler.requireToken(data);
	}
	catch (err) {
		return Promise.reject(err);
	}

	// then delete that token
	return token.delete();
};

// tokenHandler.handler({method:'get'});

module.exports = tokenHandler;
